generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int       @id(map: "categories_pk") @default(autoincrement())
  description String    @db.VarChar
  products    Product[]

  @@map("categories")
}

model Product {
  id           Int      @id(map: "products_pk") @default(autoincrement())
  name         String   @db.VarChar
  price        Int
  id_category  Int
  initial_date String   @db.VarChar
  final_date   String?  @db.VarChar
  category     Category @relation(fields: [id_category], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "products_fk")
  items        Item[]

  @@map("products")
}

model Item {
  id           Int     @id(map: "items_pk") @default(autoincrement())
  service_time String  @db.VarChar
  quantity     Int
  id_user      Int
  id_order     Int
  id_product   Int
  order        Order   @relation(fields: [id_order], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "items_fk_2")
  product      Product @relation(fields: [id_product], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "items_fk_1")
  user         User    @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "items_fk")

  @@map("items")
}

model Order {
  id          Int     @id(map: "orders_pk") @default(autoincrement())
  number      Int
  client_name String? @db.VarChar
  date        String  @db.VarChar
  id_ticket   Int
  adult_qtd   Int?    @default(0)
  kid_qtd     Int?    @default(0)
  status      String  @db.VarChar
  ticket      Ticket  @relation(fields: [id_ticket], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_fk")
  items       Item[]

  @@map("orders")
}

model Ticket {
  id           Int     @id(map: "tickets_pk") @default(autoincrement())
  description  String?  @db.VarChar
  adult_price  Int?
  kid_price    Int?
  initial_date String  @db.VarChar
  final_date   String? @db.VarChar
  orders       Order[]

  @@map("tickets")
}

model User {
  id        Int     @id(map: "users_pk") @unique(map: "users_id_idx") @default(autoincrement())
  name      String  @db.VarChar
  user_name String  @db.VarChar
  password  String  @db.VarChar
  token     String? @db.VarChar
  position  Int
  items     Item[]

  @@map("users")
}

model testes {
  id           Int    @id(map: "teste_pk") @default(autoincrement())
  description  String @db.VarChar
  day_off_date String @db.VarChar
}
